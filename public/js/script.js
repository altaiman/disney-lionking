'use strict';

(function (root) {

  // svg for all
  svg4everybody();
  scrollTo();

  var sliderOptions = {
    'prizes': {
      cellAlign: 'center',
      prevNextButtons: false,
      groupCells: $(window).width() <= 768 ? 1 : 2,
      wrapAround: true,
      contain: true
    },
    'production': {
      cellAlign: 'center',
      prevNextButtons: false,
      groupCells: $(window).width() <= 1000 ? $(window).width() <= 768 ? 1 : 2 : 4,
      wrapAround: true,
      contain: true
    }
  };

  document.querySelectorAll('[data-slider]').forEach(function (slider, i) {
    var slides = slider.querySelector('[data-slider-slides]'),
        slidesCount = slides.children.length,
        sliderData = slider.dataset.slider,
        options = sliderOptions[sliderData],
        sliderWidth = slider.offsetWidth,
        slideWidth = slides.children[0].offsetWidth,
        slidesCapacity = Math.round(sliderWidth / slideWidth),
        controls = slider.querySelector('[data-slider-controls]'),
        controlsEndIndex = slidesCount - slidesCapacity,
        adaptive = Number(slider.dataset.sliderAdaptive),
        windowWidth = window.innerWidth;

    var controlsPrev = void 0,
        controlsNext = void 0;

    if (controls) {
      controlsPrev = controls.querySelector('[data-slider-controls-prev]'), controlsNext = controls.querySelector('[data-slider-controls-next]');
    }

    if (slidesCount > slidesCapacity) {
      slider.classList.add('slider_initial');
      var flkty = new Flickity(slides, sliderOptions[slider.dataset.slider]);

      if (controls) {
        controlsPrev.addEventListener('click', function (e) {
          e.preventDefault();
          flkty.previous();
        });

        controlsNext.addEventListener('click', function (e) {
          e.preventDefault();
          flkty.next();
        });

        if (!options.wrapAround) {
          if (flkty.selectedIndex === 0) {
            controlsPrev.disabled = true;
          } else if (flkty.selectedIndex === controlsEndIndex) {
            controlsNext.disabled = true;
          }
        }
      }
    }
  });

  $('.question__header').on('click', function (e) {
    e.preventDefault();

    $(this).next().slideToggle();
    $(this).parent().toggleClass('open');
  });
})(window);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyJyb290Iiwic3ZnNGV2ZXJ5Ym9keSIsInNjcm9sbFRvIiwic2xpZGVyT3B0aW9ucyIsImNlbGxBbGlnbiIsInByZXZOZXh0QnV0dG9ucyIsImdyb3VwQ2VsbHMiLCIkIiwid2luZG93Iiwid2lkdGgiLCJ3cmFwQXJvdW5kIiwiY29udGFpbiIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJzbGlkZXIiLCJpIiwic2xpZGVzIiwicXVlcnlTZWxlY3RvciIsInNsaWRlc0NvdW50IiwiY2hpbGRyZW4iLCJsZW5ndGgiLCJzbGlkZXJEYXRhIiwiZGF0YXNldCIsIm9wdGlvbnMiLCJzbGlkZXJXaWR0aCIsIm9mZnNldFdpZHRoIiwic2xpZGVXaWR0aCIsInNsaWRlc0NhcGFjaXR5IiwiTWF0aCIsInJvdW5kIiwiY29udHJvbHMiLCJjb250cm9sc0VuZEluZGV4IiwiYWRhcHRpdmUiLCJOdW1iZXIiLCJzbGlkZXJBZGFwdGl2ZSIsIndpbmRvd1dpZHRoIiwiaW5uZXJXaWR0aCIsImNvbnRyb2xzUHJldiIsImNvbnRyb2xzTmV4dCIsImNsYXNzTGlzdCIsImFkZCIsImZsa3R5IiwiRmxpY2tpdHkiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsInByZXZlbnREZWZhdWx0IiwicHJldmlvdXMiLCJuZXh0Iiwic2VsZWN0ZWRJbmRleCIsImRpc2FibGVkIiwib24iLCJzbGlkZVRvZ2dsZSIsInBhcmVudCIsInRvZ2dsZUNsYXNzIl0sIm1hcHBpbmdzIjoiOztBQUFBLENBQUMsVUFBU0EsSUFBVCxFQUFlOztBQUVkO0FBQ0FDO0FBQ0FDOztBQUVBLE1BQU1DLGdCQUFnQjtBQUNwQixjQUFVO0FBQ1JDLGlCQUFXLFFBREg7QUFFUkMsdUJBQWlCLEtBRlQ7QUFHUkMsa0JBQWFDLEVBQUVDLE1BQUYsRUFBVUMsS0FBVixNQUFxQixHQUF0QixHQUE2QixDQUE3QixHQUFpQyxDQUhyQztBQUlSQyxrQkFBWSxJQUpK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dCkge1xuXG4gIC8vIHN2ZyBmb3IgYWxsXG4gIHN2ZzRldmVyeWJvZHkoKVxuICBzY3JvbGxUbygpXG5cbiAgY29uc3Qgc2xpZGVyT3B0aW9ucyA9IHtcbiAgICAncHJpemVzJzoge1xuICAgICAgY2VsbEFsaWduOiAnY2VudGVyJyxcbiAgICAgIHByZXZOZXh0QnV0dG9uczogZmFsc2UsXG4gICAgICBncm91cENlbGxzOiAoJCh3aW5kb3cpLndpZHRoKCkgPD0gNzY4KSA/IDEgOiAyLFxuICAgICAgd3JhcEFyb3VuZDogdHJ1ZSxcbiAgICAgIGNvbnRhaW46IHRydWVcbiAgICB9LFxuICAgICdwcm9kdWN0aW9uJzoge1xuICAgICAgY2VsbEFsaWduOiAnY2VudGVyJyxcbiAgICAgIHByZXZOZXh0QnV0dG9uczogZmFsc2UsXG4gICAgICBncm91cENlbGxzOiAoJCh3aW5kb3cpLndpZHRoKCkgPD0gMTAwMCkgPyAoKCQod2luZG93KS53aWR0aCgpIDw9IDc2OCkgPyAxIDogMikgOiA0LFxuICAgICAgd3JhcEFyb3VuZDogdHJ1ZSxcbiAgICAgIGNvbnRhaW46IHRydWVcbiAgICB9XG4gIH1cblxuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1zbGlkZXJdJykuZm9yRWFjaCgoc2xpZGVyLCBpKSA9PiB7XG4gICAgY29uc3Qgc2xpZGVzID0gc2xpZGVyLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXNsaWRlci1zbGlkZXNdJyksXG4gICAgICAgICAgc2xpZGVzQ291bnQgPSBzbGlkZXMuY2hpbGRyZW4ubGVuZ3RoLFxuICAgICAgICAgIHNsaWRlckRhdGEgPSBzbGlkZXIuZGF0YXNldC5zbGlkZXIsXG4gICAgICAgICAgb3B0aW9ucyA9IHNsaWRlck9wdGlvbnNbc2xpZGVyRGF0YV0sXG4gICAgICAgICAgc2xpZGVyV2lkdGggPSBzbGlkZXIub2Zmc2V0V2lkdGgsXG4gICAgICAgICAgc2xpZGVXaWR0aCA9IHNsaWRlcy5jaGlsZHJlblswXS5vZmZzZXRXaWR0aCxcbiAgICAgICAgICBzbGlkZXNDYXBhY2l0eSA9IE1hdGgucm91bmQoc2xpZGVyV2lkdGgvc2xpZGVXaWR0aCksXG4gICAgICAgICAgY29udHJvbHMgPSBzbGlkZXIucXVlcnlTZWxlY3RvcignW2RhdGEtc2xpZGVyLWNvbnRyb2xzXScpLFxuICAgICAgICAgIGNvbnRyb2xzRW5kSW5kZXggPSBzbGlkZXNDb3VudCAtIHNsaWRlc0NhcGFjaXR5LFxuICAgICAgICAgIGFkYXB0aXZlID0gTnVtYmVyKHNsaWRlci5kYXRhc2V0LnNsaWRlckFkYXB0aXZlKSxcbiAgICAgICAgICB3aW5kb3dXaWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoXG5cbiAgICBsZXQgY29udHJvbHNQcmV2LCBjb250cm9sc05leHRcblxuICAgIGlmIChjb250cm9scykge1xuICAgICAgY29udHJvbHNQcmV2ID0gY29udHJvbHMucXVlcnlTZWxlY3RvcignW2RhdGEtc2xpZGVyLWNvbnRyb2xzLXByZXZdJyksXG4gICAgICBjb250cm9sc05leHQgPSBjb250cm9scy5xdWVyeVNlbGVjdG9yKCdbZGF0YS1zbGlkZXItY29udHJvbHMtbmV4dF0nKVxuICAgIH1cblxuICAgIGlmIChzbGlkZXNDb3VudCA+IHNsaWRlc0NhcGFjaXR5KSB7XG4gICAgICBzbGlkZXIuY2xhc3NMaXN0LmFkZCgnc2xpZGVyX2luaXRpYWwnKVxuICAgICAgY29uc3QgZmxrdHkgPSBuZXcgRmxpY2tpdHkoc2xpZGVzLCBzbGlkZXJPcHRpb25zW3NsaWRlci5kYXRhc2V0LnNsaWRlcl0pO1xuXG4gICAgICBpZiAoY29udHJvbHMpIHtcbiAgICAgICAgY29udHJvbHNQcmV2XG4gICAgICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICAgICAgZmxrdHkucHJldmlvdXMoKVxuICAgICAgICAgIH0pXG5cbiAgICAgICAgY29udHJvbHNOZXh0XG4gICAgICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICAgICAgZmxrdHkubmV4dCgpXG4gICAgICAgICAgfSlcblxuICAgICAgICBpZiAoIW9wdGlvbnMud3JhcEFyb3VuZCkge1xuICAgICAgICAgIGlmIChmbGt0eS5zZWxlY3RlZEluZGV4ID09PSAwKSB7XG4gICAgICAgICAgICBjb250cm9sc1ByZXYuZGlzYWJsZWQgPSB0cnVlXG4gICAgICAgICAgfSBlbHNlIGlmIChmbGt0eS5zZWxlY3RlZEluZGV4ID09PSBjb250cm9sc0VuZEluZGV4KSB7XG4gICAgICAgICAgICBjb250cm9sc05leHQuZGlzYWJsZWQgPSB0cnVlXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9KVxuXG4gICQoJy5xdWVzdGlvbl9faGVhZGVyJykub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICQodGhpcykubmV4dCgpLnNsaWRlVG9nZ2xlKCk7XG4gICAgJCh0aGlzKS5wYXJlbnQoKS50b2dnbGVDbGFzcygnb3BlbicpO1xuICB9KVxuXG59KSh3aW5kb3cpO1xuIl19
